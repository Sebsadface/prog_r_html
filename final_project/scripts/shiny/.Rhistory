# this function formats the relevant data
format_df <- function(df) {
df <- df %>%
# rename and add state abbreveiations
mutate(Location = sub(" CD (.*)", "", Location)) %>%
mutate(code = setNames(state.abb, state.name)[Location]) %>%
# format dates to be by year
mutate(Date = trunc(Date / 100)) %>%
# set up the columns, grouping yearly stats
group_by(code, Date) %>%
summarize(
Temperature = mean(Value, na.rm = TRUE),
Rank = mean(Rank, na.rm = TRUE),
Anomaly = mean(Anomaly..1901.2000.base.period., na.rm = TRUE),
Mean = mean(X1901.2000.Mean, na.rm = TRUE)
)
return(df)
}
# side panel to select data
map_sidebar_content <- sidebarPanel(
selectInput(
"map_col",
"Map Data",
c("Temperature", "Anomaly", "Mean")
),
sliderInput(
"map_year",
"Year",
min = 1895,
max = 2020,
value = 2000,
step = 1
)
)
climate_cond_map_html <- "<div id=\"tab_desc\">
<h2>Climate Conditions Map</h2>
<p>This page revolves around the question: how have the average temperatures
of each state changed over the last 50+ years? We've chosen to answer this
question by providing an interavtive chloropleth map that allows the user to
investigate state temperatures, their divisional temperature anomaly, and
their divisional average temperature 1901-2000 mean in October for the years
1895 to 2020. This visualization is based on<a href=
\"https://www.ncdc.noaa.gov/cag/divisional/mapping/110/tavg/202010/1/mean\">
this</a> NOAA data.</p>
</div>"
# main panel to hold map
map_main_content <- mainPanel(
plotlyOutput("monthly_climate_cond_map")
)
# combined panels into tab, used in UI
map_panel <- tabPanel(
"Monthly Climate Conditions",
fluidPage(HTML(climate_cond_map_html)),
map_sidebar_content,
map_main_content
)
library("ggplot2")
library("plotly")
library("dplyr")
library("stringr")
# reads in the data
cei_info <- read.csv(
"../../data/U.S. Climate Extremes Index (CEI).csv",
stringsAsFactors = FALSE)
# this function is used in the server to build the map based on selected data
# takes chr for col and an int for year
# returns a plotly map
cei_graph <- function(df, col, year) {
df <- df %>%
mutate(mean = mean(df$actual_percent, na.rm = TRUE)) %>%
rename("Year" = "year",
"Above Normal" = "above_normal",
"Below Normal" = "below_normal",
"Actual Percent" = "actual_percent",
"Mean" = "mean")
# Makes a graph using ggplot
cei_plot <- ggplot(data = df) +
geom_smooth(mapping = aes(
x = year,
y = col),
method = "loess",
formula = "y ~ x") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
)
# Makes the plot interactive
graph <- ggplotly(cei_plot)
return(graph)
}
# side panel to select data
cei_sidebar <- sidebarPanel(
selectInput(
"cei_data",
"CEI Data",
c("Actual Percent",
"Above Normal",
"Below Normal")
),
sliderInput(
"cei_year",
"Year",
min = 1910,
max = 2019,
value = 2000,
step = 1
)
)
U.S_CEI_Graph_html <- "<div>
<h1>U.S. Climate Extremes Index (CEI)</h1>
<p>This page </p>
</div>"
# main panel to hold map
cei_main <- mainPanel(
plotlyOutput("U.S_CEI_Graph")
)
# combined panels into tab, used in UI
cei_panel <- tabPanel(
"Climate Extreme Index",
HTML(U.S_CEI_Graph_html),
cei_sidebar,
cei_main
)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
cei_info <- cei_info %>%
mutate(mean = mean(cei_info$actual_percent, na.rm = TRUE)) %>%
rename("Year" = "year",
"Above Normal" = "above_normal",
"Below Normal" = "below_normal",
"Actual Percent" = "actual_percent",
"Mean" = "mean")
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
library("ggplot2")
library("plotly")
library("dplyr")
library("stringr")
# reads in the data
cei_info <- read.csv(
"../../data/U.S. Climate Extremes Index (CEI).csv",
stringsAsFactors = FALSE)
# this function is used in the server to build the map based on selected data
# takes chr for col and an int for year
# returns a plotly map
cei_graph <- function(df, col, year) {
df <- df %>%
rename("Year" = "year",
"Above Normal" = "above_normal",
"Below Normal" = "below_normal",
"Actual Percent" = "actual_percent",
"Mean" = "mean")
# Makes a graph using ggplot
cei_plot <- ggplot(data = df) +
geom_smooth(mapping = aes(
x = year,
y = col),
method = "loess",
formula = "y ~ x") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
)
# Makes the plot interactive
graph <- ggplotly(cei_plot)
return(graph)
}
# side panel to select data
cei_sidebar <- sidebarPanel(
selectInput(
"cei_results",
"CEI Results",
c("Actual Percent",
"Above Normal",
"Below Normal")
),
sliderInput(
"cei_year",
"Year",
min = 1910,
max = 2019,
value = 2000,
step = 1
)
)
U.S_CEI_Graph_html <- "<div>
<h1>U.S. Climate Extremes Index (CEI)</h1>
<p>This page </p>
</div>"
# main panel to hold map
cei_main <- mainPanel(
plotlyOutput("U.S_CEI_Graph")
)
# combined panels into tab, used in UI
cei_panel <- tabPanel(
"Climate Extreme Index",
HTML(U.S_CEI_Graph_html),
cei_sidebar,
cei_main
)
library("ggplot2")
library("plotly")
library("dplyr")
library("stringr")
# reads in the data
cei_info <- read.csv(
"../../data/U.S. Climate Extremes Index (CEI).csv",
stringsAsFactors = FALSE)
# this function is used in the server to build the map based on selected data
# takes chr for col and an int for year
# returns a plotly map
cei_graph <- function(df, col, year) {
df <- df %>%
rename("Year" = "year",
"Above Normal" = "above_normal",
"Below Normal" = "below_normal",
"Actual Percent" = "actual_percent",
"Mean" = "mean")
# Makes a graph using ggplot
cei_plot <- ggplot(data = df) +
geom_smooth(mapping = aes(
x = year,
y = col),
method = "loess",
formula = "y ~ x") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
)
# Makes the plot interactive
graph <- ggplotly(cei_plot)
return(graph)
}
# side panel to select data
cei_sidebar <- sidebarPanel(
selectInput(
"cei_results",
"CEI Results",
c("Actual Percent",
"Above Normal",
"Below Normal")
),
sliderInput(
"cei_year",
"Year",
min = 1910,
max = 2019,
value = 2000,
step = 1
)
)
U.S_CEI_Graph_html <- "<div>
<h1>U.S. Climate Extremes Index (CEI)</h1>
<p>This page </p>
</div>"
# main panel to hold map
cei_main <- mainPanel(
plotlyOutput("U.S_CEI_Graph")
)
# combined panels into tab, used in UI
cei_panel <- tabPanel(
"Climate Extreme Index",
HTML(U.S_CEI_Graph_html),
cei_sidebar,
cei_main
)
library("ggplot2")
library("plotly")
library("dplyr")
library("stringr")
# reads in the data
cei_info <- read.csv(
"../../data/U.S. Climate Extremes Index (CEI).csv",
stringsAsFactors = FALSE)
# this function is used in the server to build the map based on selected data
# takes chr for col and an int for year
# returns a plotly map
cei_graph <- function(df, col, year) {
df <- df %>%
rename("Year" = "year",
"Above Normal" = "above_normal",
"Below Normal" = "below_normal",
"Actual Percent" = "actual_percent",
"Mean" = "mean")
# Makes a graph using ggplot
cei_plot <- ggplot(data = df) +
geom_smooth(mapping = aes(
x = year,
y = col),
method = "loess",
formula = "y ~ x") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
)
# Makes the plot interactive
graph <- ggplotly(cei_plot)
return(graph)
}
# side panel to select data
cei_sidebar <- sidebarPanel(
selectInput(
"cei_results",
"CEI Results",
c("Actual Percent",
"Above Normal",
"Below Normal")
),
sliderInput(
"cei_year",
"Year",
min = 1910,
max = 2019,
value = 2000,
step = 1
)
)
U.S_CEI_Graph_html <- "<div>
<h1>U.S. Climate Extremes Index (CEI)</h1>
<p>This page </p>
</div>"
# main panel to hold map
cei_main <- mainPanel(
plotlyOutput("U.S_CEI_Graph")
)
# combined panels into tab, used in UI
cei_panel <- tabPanel(
"Climate Extreme Index",
HTML(U.S_CEI_Graph_html),
cei_sidebar,
cei_main
)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
View(cei_info)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
cei_info <- cei_info %>%
mutate(mean = mean(cei_info$actual_percent, na.rm = TRUE))
# Makes a graph using ggplot
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = actual_percent
)) +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days"
)
ggplotly(cei_plot)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
ggplotly(cei_plot)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
View(cei_info)
View(cei_info)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
overview <- tabPanel(
"Overview",
fluidPage(
h2("Climate Change in the United States: An Overview"),
p(em("AA-4: Katie Hancock, Keaton Kowal, Bowen Liu, Sebastian Liu")),
p("For our project, we were interested in addressing and understanding",
strong("climate change in the United States"), "because this is a pressing
issue that affects everyone across the world. Our climate significantly
affects our lives, including our food sources, transportation, air
quality, and overall health. We performed data analysis to determine what
effects havemalready taken place. We selected a few questions to answer in
this project in order to better understand the severity of the
situation."),
p("The first question we wanted to answer was", em("how many extreme weather
days"), "the United States had over the last 50 years. Climate change
exacerbates the frequency, intensity, and impacts of extreme weather
events, so we thought this would be a strong indicator. We used the",
a(href="https://www.ncdc.noaa.gov/extremes/cei/graph",
"U.S. Climate Extremes Index (CEI)"),
"data set because it lists the percent of days with extreme weather
per year since 1910, and we can use it to observe whether conditions have
improved or worsened over time."),
p("The second question we wanted to answer was", em("how the average
temperatures of each state has changed"), "over the past 50 years. Usually
climate change causes the land and oceans to increase in temperature
rather than decrease, so we looked out for trends. We used the",
a(href="https://www.ncdc.noaa.gov/cag/divisional/mapping",
"Monthly Climate Conditions"),
"data set because it shows the monthly change in temperature for
each state which allows us to easily identify these trends."),
p("The last question we wanted to answer was", em("how the average
precipitation of each state in the U.S. has changed"), "in the past 50
years. As climate change increases the temperature of the air, the air
can hold more water vapor. More moisture in the air can cause more
intense precipitation events to occur, so identifying any trends in
increased or decreased precipitation over the years will indicate the
severity of climate change during that time. We used the",
a(href="https://www.ncdc.noaa.gov/cag/national/time-series",
"Temperature and Precipitation Trends"),
"data set because it shows the average precipitation per year, which
we can use to identify long-term trends."),
img(src = paste0("https://pharmaphorum.com/wp-content/uploads/2020/03/How-",
"pharma-can-adapt-to-climate-change-605x340.jpg"),
align = "center", width = "900px")
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
# TODO update page 2
output$U.S_CEI_Graph <- renderPlotly({
cei_graph(
cei_info,
col
)
})
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = above_normal),
method = "loess",
formula = "y ~ x",
color = "red") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days Above Normal"
)
ggplotly(cei_plot)
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = below_normal),
method = "loess",
formula = "y ~ x",
color = "green") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days Below Normal"
)
ggplotly(cei_plot)
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = actual_percent),
method = "loess",
formula = "y ~ x",
color = "blue") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days"
)
ggplotly(cei_plot)
if (input$index_category == "Actual Percentage") {
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = actual_percent),
method = "loess",
formula = "y ~ x",
color = "dark blue") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days"
)
ggplotly(cei_plot)
cei_plot <- ggplot(data = cei_info) +
geom_smooth(mapping = aes(
x = year,
y = actual_percent),
method = "loess",
formula = "y ~ x",
color = "dark_blue") +
labs(
title = "U.S. Climate Extreme Index (1910 - 2019)",
x = "Year",
y = "Percentage of Extreme Weather Days"
)
ggplotly(cei_plot)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
shiny::runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
cei_sidebar <- sidebarPanel(
radioButtons(
"index_category",
"Index Category",
choices = (c("Actual Percentage",
"Above Normal Percentage",
"Below Normal Percentage")),
selected = "Actual Percentage"
)
)
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny')
library("lintr")
library("lintr")
library("styler")
style_file("shiny_U.S_CEI_Graph.R")
setwd("/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw/scripts/shiny")
style_file("shiny_U.S_CEI_Graph.R")
library("lintr")
lint("shiny_U.S_CEI_Graph.R")
style_file("shiny_U.S_CEI_Graph.R")
shiny::runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw')
runApp('/Volumes/GoogleDrive/My Drive/UW/INFO201A/Assignments/final-project-keatonuw')
